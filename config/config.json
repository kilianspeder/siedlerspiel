{
	"_comment": "score, bonus and punishment are applied to the score, damage to the hp and thereby only indirectly to the score",
	"_syntax:":{
		"items":{
			"name":"the name displayed on the inventory list, buttons, log and error messages",
			"score":"points added to the score of the group for buying this item",
			"plusHP":"amount of HP the group recieves for buying this item. the maximum HP defined for this group will be respected.",
			"plusMaxHP":"adds the specified amount to the maximum HP reachable by this group. Does not add the amount to the actual HP.",
			"max":"Specifies the maximum number a group can possess of this item",
			"requirement":"The parameter has to be of the form itemn where n is a number between 1 and number_items. It specifies an other item of which the group has to possess at least one before they can buy the item."
		},
		"error_messages":
		{
			"requirement":"<item> will be replaced by the item that should be bought. <requirement> will be replaced by the required item.",
			"max":"<item> will be replaced by the item that should be bought. <max> will be replaced by the maximum number allowed.",
			"usage":"It is possible to define custom messages for a certain item. This can be done creating a new sub field such as item1 containing the custom messages. If a custom message is not available the default message (which is the one written outside of the custom item blocks) will be used."
		},
		"log_messages":
		{
			"buy":"<item> will be replaced by the item bought. <group> will be replaced by the group name.",
			"usage":"It is possible to define custom messages for a certain item. This can be done creating a new sub field such as item1 containing the custom messages. If a custom message is not available the default message (which is the one written outside of the custom item blocks) will be used."
		}
	},
	"number_groups": 6,
	"group_names":
	{
		"gr1": "Gruppe 1",
		"gr2": "Gruppe 2",
		"gr3": "Gruppe 3",
		"gr4": "Gruppe 4",
		"gr5": "Gruppe 5",
		"gr6": "Gruppe 6"
	},
	"init_values":
	{
		"hp":100,
		"max_hp":100,
		"item1":0,
		"item2":0,
		"item3":0,
		"item4":0,
		"item5":0,
		"item6":0,
		"item7":0,
		"item8":0,
		"item9":0,
		"item10":0,
		"item11":0,
		"item12":0,
		"item13":0,
		"item14":0,
		"item15":0,
		"item16":0,
		"item17":0,
		"item18":0,
		"item19":0,
		"item20":0
	},
	"hpName": "Einwohner",
	"finalScores":
		{
			"hp": 1,
			"deathPunishment": 40
		},
	"defenseProbability":
	{
		"factor": 0.1,
		"numberAccountableItems": 3,
		"accountableItem1": "item2",
		"accountableItem2": "item3",
		"accountableItem3": "item4"
	},
	"numberItems": 18,
	"item1":
	{
		"name": "Wohnhaus",
		"score": 2,
		"plusMaxHP": 10,
		"plusHP": 10
	},
	"item2":
	{
		"name": "Palisade",
		"score": 10,
		"max": 6,
		"_comment": "Only the ones existing at the end of the game will be counted (can be destroyed by action1)"
	},
	"item3":
	{
		"name": "Sheriff",
		"max": 1,
		"score": 13
	},
	"item4":
	{
		"name": "Hilfssheriff",
		"max": 1,
		"score": 6.5,
		"requirement": "item3",
		"_comment": "Can only be purchased after item3 has been bought, too"
	},
	"item5":
	{
		"name": "Cowboy",
		"score": 0
	},
	"item6":
	{
		"name": "Munitionskiste",
		"score": 0
	},
	"item7":
	{
		"name": "Planwagen",
		"score": 13.5
	},
	"item8":
	{
		"name": "Brunnen",
		"score": 6.5,
		"_comment": "One per item7 and per five item1 necessary. Each missing = -15 cerdits"
	},
	"item9":
	{
		"name": "Farm",
		"score": 7
	},
	"item10":
	{
		"name": "Saboteur",
		"score": 0,
		"_comment": "The one with more item10 wins action1"
	},
	"item11":
	{
		"name": "Dynamit",
		"score": 0,
		"_comment": "Necessary for action1"
	},
	"item12":
	{
		"name": "Saloon",
		"score": 22
	},
	"item13":
	{
		"name": "Bordell",
		"score": 15
	},
	"item14":
	{
		"name": "Kirche",
		"score": 19.5
	},
	"item15":
	{
		"name": "Friedhof",
		"score": 12
	},
	"item16":
	{
		"name": "Bank",
		"score": 32
	},
	"item17":
	{
		"name": "Bahnhof",
		"score": 34
	},
	"item18":
	{
		"name": "Europ. Einwanderer",
		"score": 0,
		"plusHP": 25,
		"_comment": "repairKit, adds plusHP to hp"
	},
	"item19":
	{
		"name": "unused",
		"score": 0
	},
	"item20":
	{
		"name": "unused",
		"score": 0
	},
	"number_actions": 2,
	"action1":
	{
		"name": "Sabotage",
		"destroyItem": "item2",
		"compareItem": "item10",
		"score": 5,
		"defendScore": 2.5,
		"scorePunishment": 10,
		"uses": "item11",
		"requirement": "item11",
		"_comment": "if the attacker wins, one destroyItem of the opponent will be destroyed, score only if successful and the opponent still had at least one destroyItem, defendscore for opponent if defended successfully, scorePunishment for opponent if he loses, winner is the one with more compareItem"
	},
	"action2":
	{
		"name": "Angriff",
		"damage": 5,
		"score": 5,
		"multiplicator": "item5",
		"killBonus": 10,
		"killPunishment": 5,
		"requirement": "item5",
		"uses": "item6",
		"defense":
		{
			"item2":10,
			"item3":10,
			"item4":10
		},
		"_comment": "damage is substracted from hp; damage and score will be multiplied by number of multiplicator; killBonus if oppponent reaches 0HP with this attack, killPunishment is substracted from opponents score"
	},
	"error_messages":
	{
		"requirement": "Ihr müsst erst <requirement> kaufen bevor ihr <item> kaufen könnt.",
		"max": "Ihr könnt nicht mehr als <max> <item> kaufen.",
		"item2":
		{
			"max": "<max> Pallisaden sind doch schon genug."
		},
		"item3":
		{
			"max": "In einer Stadt ist nur Platz für einen Sheriff!"
		},
		"item4":
		{
			"max": "So groß, dass sie mehr als Sheriff und Hilfssheriff brauchen würde ist eure Stadt auch wieder nicht.",
			"requirement": "Ohne einen Sheriff wüsste der Hilfssheriff gar nicht was er machen soll."
		}
	},
	"log_messages":
	{
		"buy": "Gruppe <group> hat <item> gekauft.",
		"item1":{
			"buy":"Gruppe <group> hat ein neues Wohnhaus gebaut"
		},
		"item2":{
			"buy":"Gruppe <group> hat eine Pallisade gebaut"
		},
		"item3":{
			"buy":"Für Gruppe <group> arbeitet jetzt ein Sheriff"
		},
		"item4":{
			"buy":"Gruppe <group> hat einen Hilfssheriff eingestellt"
		},
		"item5":{
			"buy":"Gruppe <group> hat einen Cowboy angeheuert"
		},
		"item6":{
			"buy":"Gruppe <group> hat eine Kiste Munition gekauft"
		},
		"item7":{
			"buy":"Gruppe <group> hat einen Planwagen gekauft"
		},
		"item8":{
			"buy":"Gruppe <group> hat einen Brunnen gebaut"
		},
		"item9":{
			"buy":"Gruppe <group> hat eine Farm gebaut"
		},
		"item10":{
			"buy":"Gruppe <group> hat einen einen Saboteur ausgebildet"
		},
		"item11":{
			"buy":"Gruppe <group> hat Dynamit gekauft"
		},
		"item12":{
			"buy":"Gruppe <group> hat einen Saloon gebaut"
		},
		"item13":{
			"buy":"Gruppe <group> hat ein Bordell gebaut"
		},
		"item14":{
			"buy":"Gruppe <group> ist religiös geworden"
		},
		"item15":{
			"buy":"Gruppe <group> hat jetzt einen Ort um die Toten zu verscharren"
		},
		"item16":{
			"buy":"Gruppe <group> hat anscheinen zu viel Geld und eine Bank gebaut"
		},
		"item17":{
			"buy":"Gruppe <group> hat jetzt Anschluss an die restliche Welt"
		},
		"item18":{
			"buy":"Gruppe <group> hat gute Einwanderungspolitik betrieben"
		},
		"success":"Gruppe <group> hat Aktion <action> erfolgreich auf Gruppe <target> durchgeführt",
		"kill":"Gruppe <group> hat Gruppe <target> getötet",
		"hitSelf":"Gruppe <group> hat versucht Aktion <action> auf sich selbst durchzuführen",
		"nothingToDestroy":"Gruppe <group> wollte auf Gruppe <target> <action> durchführen, hat aber nichts zu zerstören gefunden",
		"failure":"Gruppe <group> ist daran gescheitert Aktion <action> auf Gruppe <target> durchzuführen",
		"action1":{
			"success":"Gruppe <group> hat eine Pallisade der Gruppe <target> zerstört",
			"hitSelf":"Gruppe <group> hat versucht sich selbst zu sabotieren",
			"nothingToDestroy":"Gruppe <group> wollte Gruppe <target> sabotieren, die hatten aber gar keine Pallisaden",
			"failure":"Gruppe <group> wollte Gruppe <target> sabotieren, ist aber gnadenlos unterlegen"
		},
		"action2":{
			"success":"Gruppe <group> hat Gruppe <target> angegriffen",
			"kill":"Gruppe <group> hat Gruppe <target> vom Erdboden getilgt",
			"failure":"Gruppe <group> wurde beim Angriff auf Gruppe <target> erfolgreich abgewehrt"
		}
	},
	"dbName": "minis_DB",
	"dbUser": "minis",
	"dbPassword": "minisRule",
	"dbIP": "192.168.0.1",
	"dbPort": "3306"
}
